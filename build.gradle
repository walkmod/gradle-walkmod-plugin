buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
		classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5-beta-6'
        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.6'
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
    }
}

apply plugin: 'groovy'
apply plugin: 'codenarc'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'build-dashboard'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: "com.gradle.plugin-publish"

group = 'org.walkmod'
version = '0.0.1'

repositories {
	jcenter()
}


dependencies {
    compile gradleApi()

    compile 'org.walkmod:walkmod-cmd:3.0.0'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'

    }
    testRuntime 'cglib:cglib-nodep:3.2.0'
}



license {
    header = rootProject.file('config/HEADER')
    strictCheck = false
    ignoreFailures = false
    mapping {
        java ='SLASHSTAR_STYLE'
        groovy ='SLASHSTAR_STYLE'
    }
    ext.year = '2017'
    excludes(['**/*.ad', '**/*.asciidoc', '**/*.adoc'])
}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageSourceDirs = sourceSets.main.groovy.srcDirs
}

cobertura.coverageSourceDirs = sourceSets.main.groovy.srcDirs

codenarc {
    configFile = file('config/codenarc/codenarc.groovy')
    // run codenarc on production sources only
    sourceSets = [project.sourceSets.main]
}

task sourceJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    sourceJar
    javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                asNode().appendNode('description',
                        'gradle plugin to run walkmod')
                asNode().appendNode('name',
                        'gradle-walkmod-plugin')
                asNode().appendNode('url',
                        'https://github.com/walkmod/gradle-walkmod-plugin')
                asNode().appendNode('developers').appendNode('developer').
                        appendNode('id', 'rpau').parent().
                        appendNode('name', 'Raquel Pau').parent().
                        appendNode('email', 'rpau@walkmod.com')
                asNode().appendNode('licenses').appendNode('license').
                        appendNode('name', 'Apache License, Version 2.0').parent().
                        appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.html')
                asNode().appendNode('scm').
                        appendNode('url', 'https://github.com/walkmod/gradle-walkmod-plugin')
                        .parent().
                        appendNode('connection', 'https://github.com/walkmod/gradle-walkmod-plugin.git')
            }
        }

    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}

pluginBundle {
    website = 'http://www.walkmod.com'
    vcsUrl = 'https://github.com/walkmod/gradle-walkmod-plugin'
    description = 'Gradle WalkMod plugin'
    tags = ['walkmod', 'coding style', 'fixing', 'static code analysis']

    plugins {
        walkmodPlugin {
            id = 'org.walkmod.gradle-walkmod-plugin'
            displayName = 'Gradle WalkMod plugin'
        }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.8'
}
